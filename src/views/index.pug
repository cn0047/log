doctype html
html(lang="en")
  head
    title="Real time log"
    link(rel='stylesheet', type='text/css', href='/s/main.css?v2')
    link(rel='stylesheet', type='text/css', href='//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.11.0/styles/tomorrow.min.css')

  body

    #nav
      .dropdown
        span.dropbtn Help
        .dropdown-content
          span
            | With the purpose to post something in this stream use any code from examples below.
            br
            br
            | JavaScript:
            br
            pre.codeExample.
              fetch('#{host}:#{port}/#{streamId}', {
                method: 'post', headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({code: 200, status: 'OK'})
              });
            | NodeJS:
            br
            pre.codeExample.
              const r = require('https').request({
                host: '#{hostName}',
                path: '/#{streamId}',
                method: 'POST',
                headers: {'Content-Type': 'application/json'}
              });
              r.write(JSON.stringify({code: 200, status: 'OK'}));
              r.end();
            | PHP:
            br
            pre.codeExample.
              $ch = curl_init();
              curl_setopt($ch, CURLOPT_URL, '#{host}:#{port}/#{streamId}');
              curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
              curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode(['code' => 200]));
              curl_exec($ch);
              // OR
              exec("curl -s #{host}:#{port}/#{streamId} -H 'Content-Type: application/json' -d '".json_encode(['code' => 200])."'");
            | Bash:
            br
            pre.codeExample.
              curl -XPOST #{host}:#{port}/#{streamId} \
              -H 'Content-Type: application/json' -d '{"code":"200", "status": "OK"}'

      .dropdown
        span.dropbtn News
        .dropdown-content
          span
            table
              tr
                td
                  span.date Oct 25, 2017
                td.nw
                  | Added WebSocket rooms support.
              tr
                td
                  span.date Oct 10, 2017
                td.nw
                  | Added unit tests and coverage report ðŸ˜Ž.
              tr
                td
                  span.date Sep 27, 2017
                td.nw
                  | Added eslint.
              tr
                td
                  span.date Sep 21, 2017
                td.nw
                  | Added NodeJS usage example. Switched from http to https.
              tr
                td
                  span.date Jun 30, 2017
                td.nw
                  | Template engine jade replaced with pug.
              tr
                td
                  span.date Jun 13, 2017
                td.nw
                  | Added JavaScript usage example.
              tr
                td
                  span.date May 18, 2017
                td.nw
                  | Added code highlight ðŸŽ¨.
              tr
                td
                  span.date Apr 19, 2017
                td.nw
                  | Added PHP usage example.
              tr
                td
                  span.date Mar 22, 2017
                td.nw
                  | Init project ðŸŽ¬. Project deployed on heroku and available by url: realtimelog.herokuapp.com

      a.pull-right.green(href="https://github.com/cn007b/log") Fork me on GitHub
    #root
    script(type='text/javascript', src=socketIoJs)
    script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.4.0/highlight.min.js')
    script(type='text/javascript', src='/js/app.js')
