| With the purpose to post something in this stream use any code from examples below.
br
br
| JavaScript:
br
pre.codeExample.
    #[span.purple fetch](#[span.green '#{host}:#{port}/#{streamId}'], {
      method: #[span.green 'post'], headers: {#[span.green 'Content-Type']: #[span.green 'application/json']},
      body: #[span.purple JSON.stringify]({code: 200, status: #[span.green 'OK']})
    });
| NodeJS:
br
pre.codeExample.
    #[span.orange const] r #[span.orange =] #[span.purple require](#[span.green 'https']).#[span.purple request]({
      host: #[span.green '#{hostName}'],
      path: #[span.green '/#{streamId}'],
      method: #[span.green 'POST'],
      headers: {#[span.green 'Content-Type']: #[span.green 'application/json']}
    });
    #[span.purple r.write](#[span.purple JSON.stringify]({code: 200, status: #[span.green 'OK']}));
    #[span.purple r.end]();
| Go:
br
pre.codeExample.
    import (
      #[span.green "bytes"]
      #[span.green "encoding/json"]
      #[span.green "net/http"]
    )
    j, _ #[span.orange :=] #[span.purple json.Marshal](map[string]string{#[span.green "code"]: #[span.green "200"], #[span.green "status"]: #[span.green "ok"]})
    #[span.purple http.Post](#[span.green "#{host}:#{port}/#{streamId}"], #[span.green "application/json"], #[span.purple bytes.NewBuffer](j))
| PHP:
br
pre.codeExample.
    $ch #[span.orange =] #[span.purple curl_init]();
    #[span.purple curl_setopt]($ch, CURLOPT_URL, #[span.green '#{host}:#{port}/#{streamId}']);
    #[span.purple curl_setopt]($ch, CURLOPT_HTTPHEADER, [#[span.green 'Content-Type: application/json']]);
    #[span.purple curl_setopt]($ch, CURLOPT_POSTFIELDS, #[span.purple json_encode]([#[span.green 'code'] #[span.orange =>] 200, #[span.green 'status'] #[span.orange =>] #[span.green 'OK']]));
    #[span.purple curl_exec]($ch);
    // OR
    #[span.purple exec](#[span.green "curl -s #{host}:#{port}/#{streamId} -H 'Content-Type: application/json' -d '"].#[span.purple json_encode]([#[span.green 'code'] #[span.orange =>] 200]).#[span.green "'"]);
| Bash:
br
pre.codeExample.
    #[span.purple curl] -XPOST #[span.green '#{host}:#{port}/#{streamId}'] \
    -H #[span.green 'Content-Type: application/json'] -d #[span.green '{"code":"200", "status": "OK"}']
    // OR
    ["sh", "-c", "curl -XPOST #[span.green '#{host}:#{port}/#{streamId}'] -H #[span.green 'Content-Type: application/json'] -d #[span.green '{\"code\": 200}']"]
